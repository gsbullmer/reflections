What happens when you initialize a repository? Why do you need to do it?

This sets up the .git directory and all necessary files to be able to track the
repository.
--------------------------------------------------------------------------------
How is the staging area different from the working directory and the repository?
What value do you think it offers?

The staging area allows you to separate all of your files that have changed with
only those you want to commit. This is important because it allows the user to
decide what to add to an individual, meaningful commit without being able to
only work on one change at a time.
--------------------------------------------------------------------------------
How can you use the staging area to make sure you have one commit per logical
change?

You can stage only the files that are related to the logical change.
--------------------------------------------------------------------------------
What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

When expanding new features to an already working project. This protects your
project from breaking while a work-in-progress is being added. Once the feature
has been tested and is working, merge it into the master branch.
How do the diagrams help you visualize the branch structure?
--------------------------------------------------------------------------------

It allows you to see the relations of the commits and what branch they are
associated with. This helps with understanding where merges or future branches
need to happen.
--------------------------------------------------------------------------------
What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

It results in adding all commits from one branch to another. Its represented
this way so its easy to see what commits belong to a particular branch.
